from amaranth import *
from src.rom import *

###########################################
# rv32ui NOP instruction tests:           #
###########################################

# Simulated ROM image:
nop_rom = rom_img( [
  0x6F004004, 0x732F2034, 0x930F8000, 0x6308FF03, 
  0x930F9000, 0x6304FF03, 0x930FB000, 0x6300FF03, 
  0x130F0000, 0x63040F00, 0x67000F00, 0x732F2034, 
  0x63540F00, 0x6F004000, 0x93E19153, 0x23203040, 
  0x6FF0DFFF, 0x732540F1, 0x63100500, 0x97020000, 
  0x93820201, 0x73905230, 0x73500018, 0x97020000, 
  0x9382C201, 0x73905230, 0x9302F0FF, 0x7390023B, 
  0x9302F001, 0x7390023A, 0x97020000, 0x93828201, 
  0x73905230, 0x73502030, 0x73503030, 0x73504030, 
  0x93010000, 0x97020000, 0x938202F7, 0x73905230, 
  0x13051000, 0x1315F501, 0x634A0500, 0x0F00F00F, 
  0x9308D005, 0x13050000, 0x6F000029, 0x93020000, 
  0x638E0200, 0x73905210, 0xB7B20000, 0x93829210, 
  0x73902230, 0x73232030, 0xE39062F6, 0x73500030, 
  0x37250000, 0x13050580, 0x73200530, 0x97020000, 
  0x93824201, 0x73901234, 0x732540F1, 0x73002030, 
  0x930F0000, 0x631AF025, 0x97000020, 0x938080FF, 
  0x13012000, 0x93013000, 0x13024000, 0x93025000, 
  0x13036000, 0x93037000, 0x13048000, 0x93049000, 
  0x1305A000, 0x9305B000, 0x1306C000, 0x9306D000, 
  0x1307E000, 0x9307F000, 0x13080001, 0x93081001, 
  0x13092001, 0x93093001, 0x130A4001, 0x930A5001, 
  0x130B6001, 0x930B7001, 0x130C8001, 0x930C9001, 
  0x130DA001, 0x930DB001, 0x130EC001, 0x930ED001, 
  0x130FE001, 0x930FF001, 0x13000000, 0x13000000, 
  0x13000000, 0x13000000, 0x13000000, 0x13000000, 
  0x23A00000, 0x23A22000, 0x23A43000, 0x23A64000, 
  0x23A85000, 0x23AA6000, 0x23AC7000, 0x23AE8000, 
  0x23A09002, 0x23A2A002, 0x23A4B002, 0x23A6C002, 
  0x23A8D002, 0x23AAE002, 0x23ACF002, 0x23AE0003, 
  0x23A01005, 0x23A22005, 0x23A43005, 0x23A64005, 
  0x23A85005, 0x23AA6005, 0x23AC7005, 0x23AE8005, 
  0x23A09007, 0x23A2A007, 0x23A4B007, 0x23A6C007, 
  0x23A8D007, 0x23AAE007, 0x23ACF007, 0x93000000, 
  0x631C1012, 0x93002000, 0x63181112, 0x93003000, 
  0x63941112, 0x93004000, 0x63101212, 0x93005000, 
  0x639C1210, 0x93006000, 0x63181310, 0x93007000, 
  0x63941310, 0x93008000, 0x63101410, 0x93009000, 
  0x639C140E, 0x9300A000, 0x6318150E, 0x9300B000, 
  0x6394150E, 0x9300C000, 0x6310160E, 0x9300D000, 
  0x639C160C, 0x9300E000, 0x6318170C, 0x9300F000, 
  0x6394170C, 0x93000001, 0x6310180C, 0x93001001, 
  0x639C180A, 0x93002001, 0x6318190A, 0x93003001, 
  0x6394190A, 0x93004001, 0x63101A0A, 0x93005001, 
  0x639C1A08, 0x93006001, 0x63181B08, 0x93007001, 
  0x63941B08, 0x93008001, 0x63101C08, 0x93009001, 
  0x639C1C06, 0x9300A001, 0x63181D06, 0x9300B001, 
  0x63941D06, 0x9300C001, 0x63101E06, 0x9300D001, 
  0x639C1E04, 0x9300E001, 0x63181F04, 0x9300F001, 
  0x63941F04, 0x97010020, 0x938181E6, 0x17040000, 
  0x13000000, 0x13000000, 0x13000000, 0x13000000, 
  0x13000000, 0x97040000, 0xB3848440, 0x23A09100, 
  0x93018001, 0x639A3400, 0x0F00F00F, 0x9308D005, 
  0x13050000, 0x6FF05FFF, 0x0F00F00F, 0x9308D005, 
  0x37150000, 0x1305D5BA, 0x6FF01FFF, 0x731000C0, 
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 
  0x00000000, 0x00000000, 0x00000000, 0x00000000
] )

# Simulated initialized RAM image:
nop_ram = ram_img( [
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 
  0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 
  0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 
  0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 
  0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 
  0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 
  0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 
  0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 
  0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 
  0x80000000, 0x00000000, 0x00000000, 0x00000000, 
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 
  0x00000000, 0x00000000, 0x00000000, 0x00000000
] )

# Expected 'pass' register values.
nop_exp = {
  640: [ { 'r': 17, 'e': 93 }, { 'r': 10, 'e': 0 } ],  'end': 640
}

# Collected test program definition:
nop_test = [ 'NOP compliance tests', 'cpu_nop', nop_rom, nop_ram, nop_exp ]