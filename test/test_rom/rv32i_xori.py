from amaranth import *
from src.rom import *

###########################################
# rv32ui XORI instruction tests:          #
###########################################

# Simulated ROM image:
xori_rom = rom_img( [
  0x6F004004, 0x732F2034, 0x930F8000, 0x6308FF03, 
  0x930F9000, 0x6304FF03, 0x930FB000, 0x6300FF03, 
  0x130F0000, 0x63040F00, 0x67000F00, 0x732F2034, 
  0x63540F00, 0x6F004000, 0x93E19153, 0x23203050, 
  0x6FF0DFFF, 0x732540F1, 0x63100500, 0x97020000, 
  0x93820201, 0x73905230, 0x73500018, 0x97020000, 
  0x9382C201, 0x73905230, 0x9302F0FF, 0x7390023B, 
  0x9302F001, 0x7390023A, 0x97020000, 0x93828201, 
  0x73905230, 0x73502030, 0x73503030, 0x73504030, 
  0x93010000, 0x97020000, 0x938202F7, 0x73905230, 
  0x13051000, 0x1315F501, 0x634A0500, 0x0F00F00F, 
  0x9308D005, 0x13050000, 0x6F000035, 0x93020000, 
  0x638E0200, 0x73905210, 0xB7B20000, 0x93829210, 
  0x73902230, 0x73232030, 0xE39062F6, 0x73500030, 
  0x37250000, 0x13050580, 0x73200530, 0x97020000, 
  0x93824201, 0x73901234, 0x732540F1, 0x73002030, 
  0x930F0000, 0x631AF031, 0x97020020, 0x938282FF, 
  0x930FF0FF, 0x13C00F00, 0x23A00200, 0x13030000, 
  0x631C602E, 0x130F1000, 0x93401F80, 0x23A21200, 
  0x13030080, 0x6392602E, 0x930E0000, 0x13C1FEFF, 
  0x23A42200, 0x1303F0FF, 0x6318612C, 0x130EF07F, 
  0x93410E80, 0x23A63200, 0x1303F0FF, 0x639E612A, 
  0x930D0000, 0x13C20D80, 0x23A84200, 0x13030080, 
  0x6314622A, 0x97000020, 0x938000FA, 0x371D0000, 
  0x130D0D80, 0x93420D80, 0x23A05000, 0x37F1FFFF, 
  0x63942228, 0xB74C6507, 0x938C1C32, 0x13C30C80, 
  0x23A26000, 0x37C19AF8, 0x130111B2, 0x63162326, 
  0x370C0080, 0x130CFCFF, 0x93431C00, 0x23A47000, 
  0x37010080, 0x1301E1FF, 0x63982324, 0x930B1000, 
  0x13C40B80, 0x23A68000, 0x13011080, 0x631E2422, 
  0x130BF0FF, 0x93440B80, 0x23A89000, 0x1301F07F, 
  0x63942422, 0x97000020, 0x938040F3, 0xB71A0000, 
  0x938A4A23, 0x13C50A80, 0x23A0A000, 0xB7F3FFFF, 
  0x938343A3, 0x63127520, 0x370A0080, 0x93450A00, 
  0x23A2B000, 0xB7030080, 0x6398751E, 0xB7F9FFFF, 
  0x9389C9DC, 0x13C6F97F, 0x23A4C000, 0xB7F3FFFF, 
  0x938333A3, 0x631A761C, 0x1309F0FF, 0x9346F9FF, 
  0x23A6D000, 0x93030000, 0x6390761C, 0x93081080, 
  0x13C71800, 0x23A8E000, 0x93030080, 0x6316771A, 
  0x17010020, 0x1301C1EC, 0x13080000, 0x93470800, 
  0x2320F100, 0x93010000, 0x63983718, 0x9307F0FF, 
  0x13C80700, 0x23220101, 0x9301F0FF, 0x631E3816, 
  0x13071000, 0x93481780, 0x23241101, 0x93010080, 
  0x63943816, 0x93060000, 0x13C9F6FF, 0x23262101, 
  0x9301F0FF, 0x631A3914, 0x1306F07F, 0x93490680, 
  0x23283101, 0x9301F0FF, 0x63903914, 0x97000020, 
  0x938040E7, 0x93050000, 0x13CA0580, 0x23A04001, 
  0x13010080, 0x63122A12, 0x37150000, 0x13050580, 
  0x934A0580, 0x23A25001, 0x37F1FFFF, 0x63962A10, 
  0xB7446507, 0x93841432, 0x13CB0480, 0x23A46001, 
  0x37C19AF8, 0x130111B2, 0x63182B0E, 0x37040080, 
  0x1304F4FF, 0x934B1400, 0x23A67001, 0x37010080, 
  0x1301E1FF, 0x639A2B0C, 0x93031000, 0x13CC0380, 
  0x23A88001, 0x13011080, 0x63102C0C, 0x97000020, 
  0x938080E0, 0x1303F0FF, 0x934C0380, 0x23A09001, 
  0x9303F07F, 0x63927C0A, 0xB7120000, 0x93824223, 
  0x13CD0280, 0x23A2A001, 0xB7F3FFFF, 0x938343A3, 
  0x63147D08, 0x37020080, 0x934D0200, 0x23A4B001, 
  0xB7030080, 0x639A7D06, 0xB7F1FFFF, 0x9381C1DC, 
  0x13CEF17F, 0x23A6C001, 0xB7F3FFFF, 0x938333A3, 
  0x631C7E04, 0x1301F0FF, 0x934EF1FF, 0x23A8D001, 
  0x93030000, 0x63927E04, 0x17010020, 0x130101DA, 
  0x93001080, 0x13CF1000, 0x2320E101, 0x93010080, 
  0x63143F02, 0x13000000, 0x934F0000, 0x2322F101, 
  0x93010000, 0x639A3F00, 0x0F00F00F, 0x9308D005, 
  0x13050000, 0x6FF05FFF, 0x0F00F00F, 0x9308D005, 
  0x37150000, 0x1305D5BA, 0x6FF01FFF, 0x731000C0, 
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 
  0x00000000, 0x00000000, 0x00000000, 0x00000000
] )

# Simulated initialized RAM image:
xori_ram = ram_img( [
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 
  0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 
  0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 
  0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 
  0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 
  0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 
  0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 
  0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 
  0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 
  0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x00000000, 
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 
  0x80000000, 0x00000000, 0x00000000, 0x00000000, 
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 
  0x00000000, 0x00000000, 0x00000000, 0x00000000
] )

# Expected 'pass' register values.
xori_exp = {
  768: [ { 'r': 17, 'e': 93 }, { 'r': 10, 'e': 0 } ],  'end': 768
}

# Collected test program definition:
xori_test = [ 'XORI compliance tests', 'cpu_xori', xori_rom, xori_ram, xori_exp ]