from amaranth import *
from src.rom import *

###########################################
# rv32ui RF_WIDTH instruction tests:      #
###########################################

# Simulated ROM image:
rf_width_rom = rom_img( [
  0x6F004004, 0x732F2034, 0x930F8000, 0x6308FF03, 
  0x930F9000, 0x6304FF03, 0x930FB000, 0x6300FF03, 
  0x130F0000, 0x63040F00, 0x67000F00, 0x732F2034, 
  0x63540F00, 0x6F004000, 0x93E19153, 0x23203050, 
  0x6FF0DFFF, 0x732540F1, 0x63100500, 0x97020000, 
  0x93820201, 0x73905230, 0x73500018, 0x97020000, 
  0x9382C201, 0x73905230, 0x9302F0FF, 0x7390023B, 
  0x9302F001, 0x7390023A, 0x97020000, 0x93828201, 
  0x73905230, 0x73502030, 0x73503030, 0x73504030, 
  0x93010000, 0x97020000, 0x938202F7, 0x73905230, 
  0x13051000, 0x1315F501, 0x634A0500, 0x0F00F00F, 
  0x9308D005, 0x13050000, 0x6F00403D, 0x93020000, 
  0x638E0200, 0x73905210, 0xB7B20000, 0x93829210, 
  0x73902230, 0x73232030, 0xE39062F6, 0x73500030, 
  0x37250000, 0x13050580, 0x73200530, 0x97020000, 
  0x93824201, 0x73901234, 0x732540F1, 0x73002030, 
  0x930F0000, 0x631CF039, 0x17080020, 0x130888FF, 
  0x13001000, 0x93001000, 0x13011000, 0x93011000, 
  0x13021000, 0x93021000, 0x13031000, 0x93031000, 
  0x13041000, 0x93041000, 0x13051000, 0x93051000, 
  0x13061000, 0x93061000, 0x13071000, 0x93071000, 
  0x9390F001, 0x63C40000, 0x93000000, 0x1311F101, 
  0x63440100, 0x13010000, 0x9391F101, 0x63C40100, 
  0x93010000, 0x1312F201, 0x63440200, 0x13020000, 
  0x9392F201, 0x63C40200, 0x93020000, 0x1313F301, 
  0x63440300, 0x13030000, 0x9393F301, 0x63C40300, 
  0x93030000, 0x1314F401, 0x63440400, 0x13040000, 
  0x9394F401, 0x63C40400, 0x93040000, 0x1315F501, 
  0x63440500, 0x13050000, 0x9395F501, 0x63C40500, 
  0x93050000, 0x1316F601, 0x63440600, 0x13060000, 
  0x9396F601, 0x63C40600, 0x93060000, 0x1317F701, 
  0x63440700, 0x13070000, 0x9397F701, 0x63C40700, 
  0x93070000, 0x23200800, 0x23221800, 0x23242800, 
  0x23263800, 0x23284800, 0x232A5800, 0x232C6800, 
  0x232E7800, 0x23208802, 0x23229802, 0x2324A802, 
  0x2326B802, 0x2328C802, 0x232AD802, 0x232CE802, 
  0x232EF802, 0x13080000, 0x631A0025, 0x37080080, 
  0x63960025, 0x37080080, 0x63120125, 0x37080080, 
  0x639E0123, 0x37080080, 0x631A0223, 0x37080080, 
  0x63960223, 0x37080080, 0x63120323, 0x37080080, 
  0x639E0321, 0x37080080, 0x631A0421, 0x37080080, 
  0x63960421, 0x37080080, 0x63120521, 0x37080080, 
  0x639E051F, 0x37080080, 0x631A061F, 0x37080080, 
  0x6396061F, 0x37080080, 0x6312071F, 0x37080080, 
  0x639E071D, 0x97000020, 0x9380C0E7, 0x13081000, 
  0x93081000, 0x13091000, 0x93091000, 0x130A1000, 
  0x930A1000, 0x130B1000, 0x930B1000, 0x130C1000, 
  0x930C1000, 0x130D1000, 0x930D1000, 0x130E1000, 
  0x930E1000, 0x130F1000, 0x930F1000, 0x1318F801, 
  0x63440800, 0x13080000, 0x9398F801, 0x63C40800, 
  0x93080000, 0x1319F901, 0x63440900, 0x13090000, 
  0x9399F901, 0x63C40900, 0x93090000, 0x131AFA01, 
  0x63440A00, 0x130A0000, 0x939AFA01, 0x63C40A00, 
  0x930A0000, 0x131BFB01, 0x63440B00, 0x130B0000, 
  0x939BFB01, 0x63C40B00, 0x930B0000, 0x131CFC01, 
  0x63440C00, 0x130C0000, 0x939CFC01, 0x63C40C00, 
  0x930C0000, 0x131DFD01, 0x63440D00, 0x130D0000, 
  0x939DFD01, 0x63C40D00, 0x930D0000, 0x131EFE01, 
  0x63440E00, 0x130E0000, 0x939EFE01, 0x63C40E00, 
  0x930E0000, 0x131FFF01, 0x63440F00, 0x130F0000, 
  0x939FFF01, 0x63C40F00, 0x930F0000, 0x23A00001, 
  0x23A21001, 0x23A42001, 0x23A63001, 0x23A84001, 
  0x23AA5001, 0x23AC6001, 0x23AE7001, 0x23A08003, 
  0x23A29003, 0x23A4A003, 0x23A6B003, 0x23A8C003, 
  0x23AAD003, 0x23ACE003, 0x23AEF003, 0xB7000080, 
  0x63161808, 0xB7000080, 0x63921808, 0xB7000080, 
  0x631E1906, 0xB7000080, 0x639A1906, 0xB7000080, 
  0x63161A06, 0xB7000080, 0x63921A06, 0xB7000080, 
  0x631E1B04, 0xB7000080, 0x639A1B04, 0xB7000080, 
  0x63161C04, 0xB7000080, 0x63921C04, 0xB7000080, 
  0x631E1D02, 0xB7000080, 0x639A1D02, 0xB7000080, 
  0x63161E02, 0xB7000080, 0x63921E02, 0xB7000080, 
  0x631E1F00, 0xB7000080, 0x639A1F00, 0x0F00F00F, 
  0x9308D005, 0x13050000, 0x6FF05FFF, 0x0F00F00F, 
  0x9308D005, 0x37150000, 0x1305D5BA, 0x6FF01FFF, 
  0x731000C0, 0x00000000, 0x00000000, 0x00000000, 
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 
  0x00000000, 0x00000000, 0x00000000, 0x00000000
] )

# Simulated initialized RAM image:
rf_width_ram = ram_img( [
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 
  0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 
  0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 
  0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 
  0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 
  0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 
  0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 
  0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 
  0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 
  0x80000000, 0x00000000, 0x00000000, 0x00000000, 
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 
  0x00000000, 0x00000000, 0x00000000, 0x00000000
] )

# Expected 'pass' register values.
rf_width_exp = {
  768: [ { 'r': 17, 'e': 93 }, { 'r': 10, 'e': 0 } ],  'end': 768
}

# Collected test program definition:
rf_width_test = [ 'RF_WIDTH compliance tests', 'cpu_rf_width', rf_width_rom, rf_width_ram, rf_width_exp ]