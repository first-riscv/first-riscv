from amaranth import *
from src.rom import *

###########################################
# rv32ui MISALIGN_JMP instruction tests:  #
###########################################

# Simulated ROM image:
misalign_jmp_rom = rom_img( [
  0x6F004004, 0x732F2034, 0x930F8000, 0x6308FF03, 
  0x930F9000, 0x6304FF03, 0x930FB000, 0x6300FF03, 
  0x130F0000, 0x63040F00, 0x67000F00, 0x732F2034, 
  0x63540F00, 0x6F004000, 0x93E19153, 0x23203040, 
  0x6FF0DFFF, 0x732540F1, 0x63100500, 0x97020000, 
  0x93820201, 0x73905230, 0x73500018, 0x97020000, 
  0x9382C201, 0x73905230, 0x9302F0FF, 0x7390023B, 
  0x9302F001, 0x7390023A, 0x97020000, 0x93828201, 
  0x73905230, 0x73502030, 0x73503030, 0x73504030, 
  0x93010000, 0x97020000, 0x938202F7, 0x73905230, 
  0x13051000, 0x1315F501, 0x634A0500, 0x0F00F00F, 
  0x9308D005, 0x13050000, 0x6F004028, 0x93020000, 
  0x638E0200, 0x73905210, 0xB7B20000, 0x93829210, 
  0x73902230, 0x73232030, 0xE39062F6, 0x73500030, 
  0x37250000, 0x13050580, 0x73200530, 0x97020000, 
  0x93824201, 0x73901234, 0x732540F1, 0x73002030, 
  0x130F0000, 0x6314E025, 0x97000000, 0x93808020, 
  0xF39F5030, 0x73701230, 0x97000020, 0x938080FE, 
  0x37111111, 0x13011111, 0x6F00A000, 0x13010000, 
  0x97000020, 0x9380C0FD, 0x37212222, 0x13012122, 
  0x17020000, 0x13021201, 0x67000200, 0x13010000, 
  0x23A02000, 0x93804000, 0x37313333, 0x13013133, 
  0x17020000, 0x13020201, 0x67001200, 0x13010000, 
  0x23A02000, 0x93804000, 0x37414444, 0x13014144, 
  0x17020000, 0x13024201, 0x6700D2FF, 0x13010000, 
  0x23A02000, 0x93804000, 0x97000020, 0x938000F8, 
  0x37515555, 0x13015155, 0x17020000, 0x13022201, 
  0x67000200, 0x13010000, 0x37616666, 0x13016166, 
  0x17020000, 0x13023201, 0x67000200, 0x13010000, 
  0x37717777, 0x13017177, 0x17020000, 0x13020201, 
  0x67002200, 0x13010000, 0x37918888, 0x13018188, 
  0x17020000, 0x13020201, 0x67003200, 0x13010000, 
  0x97000020, 0x938080F4, 0x93025000, 0x13036000, 
  0x63876200, 0x37A19999, 0x13019199, 0x13000000, 
  0x13000000, 0x63855200, 0x13010000, 0x97000020, 
  0x938080F2, 0x93025000, 0x13036000, 0x63975200, 
  0x37B1AAAA, 0x1301A1AA, 0x13000000, 0x13000000, 
  0x63956200, 0x13010000, 0x97000020, 0x938080F0, 
  0x93025000, 0x13036000, 0x63475300, 0x37C1BBBB, 
  0x1301B1BB, 0x13000000, 0x13000000, 0x63C56200, 
  0x13010000, 0x97000020, 0x938080EE, 0x93025000, 
  0x13036000, 0x63675300, 0x37D1CCCC, 0x1301C1CC, 
  0x13000000, 0x13000000, 0x63E56200, 0x13010000, 
  0x97000020, 0x938080EC, 0x93025000, 0x13036000, 
  0x63D76200, 0x37E1DDDD, 0x1301D1DD, 0x13000000, 
  0x13000000, 0x63555300, 0x13010000, 0x97000020, 
  0x938080EA, 0x93025000, 0x13036000, 0x63F76200, 
  0x37F1EEEE, 0x1301E1EE, 0x13000000, 0x13000000, 
  0x63755300, 0x13010000, 0x73905F30, 0x6F000003, 
  0x732F3034, 0x130FEFFF, 0x73101F34, 0x732F3034, 
  0x137F3F00, 0x23A0E001, 0x732F2034, 0x23A2E001, 
  0x23A42000, 0x9380C000, 0x73002030, 0x0F00F00F, 
  0x9308D005, 0x13050000, 0x6FF05FFF, 0x0F00F00F, 
  0x9308D005, 0x37150000, 0x1305D5BA, 0x6FF01FFF, 
  0x731000C0, 0x00000000, 0x00000000, 0x00000000, 
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 
  0x00000000, 0x00000000, 0x00000000, 0x00000000
] )

# Simulated initialized RAM image:
misalign_jmp_ram = ram_img( [
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 
  0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 
  0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 
  0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 
  0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 
  0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 
  0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 
  0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 
  0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 
  0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 
  0x80000000, 0x00000000, 0x00000000, 0x00000000, 
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 
  0x00000000, 0x00000000, 0x00000000, 0x00000000
] )

# Expected 'pass' register values.
misalign_jmp_exp = {
  640: [ { 'r': 17, 'e': 93 }, { 'r': 10, 'e': 0 } ],  'end': 640
}

# Collected test program definition:
misalign_jmp_test = [ 'MISALIGN_JMP compliance tests', 'cpu_misalign_jmp', misalign_jmp_rom, misalign_jmp_ram, misalign_jmp_exp ]